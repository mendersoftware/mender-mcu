include:
  - project: 'Northern.tech/Mender/mendertesting'
    file:
      - '.gitlab-ci-check-commits.yml'
      - '.gitlab-ci-github-status-updates.yml'

stages:
  - test
  - trigger
  - publish
  - .post

variables:
  # mender-artifact version for tests
  MENDER_ARTIFACT_VERSION:
    description: "mender-artifact version for tests"
    value: 4.0.0
  MENDER_MCU_INTEGRATION_REVISION:
    description: |
      Revision of mender-mcu-integration to trigger.
      Should correspond to the gitlab branch: `pr_XXX`
    value: main

default:
  tags:
    # Don't run gitlab hosted runners by default
    - hetzner-amd-beefy

.test:static:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/ubuntu:24.04
  needs: []
  before_script:
    - apt-get update && apt-get install -y git clang-format pcregrep
  tags:
    # QA-866: Ubuntu 24.04 image cannot properly run on our private runners.
    # Temporarely setting it to GitLab Hosted runners
    - saas-linux-medium-amd64

test:static:license:
  extends: .test:static
  script:
    - ./.github/workflows/check_headers.sh

test:static:code:
  extends: .test:static
  script:
    - ./.github/workflows/check_include_guards.sh
    - ./.github/workflows/check_equivalence_tests.sh
    - ./.github/workflows/check_code_format.sh
    - ./.github/workflows/check_allocations.sh

test:smoke-build:posix:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/debian:12-slim
  needs: []
  before_script:
    - apt-get update && apt-get install -yqq
      cmake git make pkg-config python3
      libcurl4-openssl-dev libcjson-dev
  script:
    - cmake -C cmake/CMake_posix_defaults.txt -B build tests/smoke
    - cmake --build build --parallel $(nproc --all)
    - ./build/mender-mcu-client.elf --help

test:smoke-build:weak:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/debian:12-slim
  needs: []
  before_script:
    - apt-get update && apt-get install -yqq
      cmake git make pkg-config python3
      libcjson-dev
  script:
    - cmake -C cmake/CMake_weak_defaults.txt -B build tests/smoke
    - cmake --build build --parallel $(nproc --all)
    - ./build/mender-mcu-client.elf --help

test:unit:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/debian:12-slim
  before_script:
    - apt update && apt install -yyq
      cmake git make pkg-config python3
      libcurl4-openssl-dev libcjson-dev
      g++ lcov wget
    # Fetch and install mender-artifact
    - wget "https://downloads.mender.io/repos/debian/pool/main/m/mender-artifact/mender-artifact_${MENDER_ARTIFACT_VERSION}-1+debian+bookworm_amd64.deb"
      -O mender-artifact.deb &&
      dpkg --install mender-artifact.deb
  script:
    - cmake -D COVERAGE=ON tests/unit/
    - make --jobs=$(nproc --all) --keep-going coverage
  artifacts:
    expire_in: 2w
    reports:
      junit: /tests/unit/reports/*.xml
    paths:
      - coverage.lcov

.test:static:template:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/ubuntu:24.04
  before_script:
    - apt update && apt install -yyq
      cmake git make pkg-config python3
      libcurl4-openssl-dev libcjson-dev
      clang wget
    # Fetch and install mender-artifact
    - wget "https://downloads.mender.io/repos/debian/pool/main/m/mender-artifact/mender-artifact_${MENDER_ARTIFACT_VERSION}-1+ubuntu+noble_amd64.deb"
      -O mender-artifact.deb &&
      dpkg --install mender-artifact.deb
    - export CC=$(which clang)
    - export CXX=$(which clang++)
  script:
    - cmake -D CMAKE_BUILD_TYPE=${BUILD_TYPE} tests/unit
    - make --jobs=$(nproc --all) --keep-going check
  tags:
    # QA-866: Ubuntu 24.04 image cannot properly run on our private runners.
    # Temporarily setting it to GitLab Hosted runners
    - saas-linux-medium-amd64

test:static:asan:
  extends: .test:static:template
  variables:
    BUILD_TYPE: ASan

test:static:threadsan:
  extends: .test:static:template
  variables:
    BUILD_TYPE: ThreadSan

test:static:undefinedsan:
  extends: .test:static:template
  variables:
    BUILD_TYPE: UndefSan

test:static:release:
  extends: .test:static:template
  variables:
    BUILD_TYPE: Release

trigger:mender-mcu-integration:
  stage: trigger
  trigger:
    project: Northern.tech/Mender/mender-mcu-integration
    branch: ${MENDER_MCU_INTEGRATION_REVISION}
    strategy: depend
  variables:
    MENDER_MCU_REVISION: $CI_COMMIT_SHA
    PARENT_MENDER_MCU_PIPELINE_ID: $CI_PIPELINE_ID
    PARENT_MENDER_MCU_COMMIT_BRANCH: $CI_COMMIT_BRANCH

publish:tests:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/python:3.11
  dependencies:
    - test:unit
  before_script:
    # https://github.com/coverallsapp/coverage-reporter
    - wget -qO- https://coveralls.io/coveralls-linux.tar.gz | tar xz -C /usr/local/bin
  variables:
    COVERALLS_PARALLEL: true
    COVERALLS_FLAG_NAME: "unit-tests"
    COVERALLS_SERVICE_NAME: "gitlab-ci"
    COVERALLS_GIT_COMMIT: $CI_COMMIT_SHA
    COVERALLS_REPO_TOKEN: $COVERALLS_TOKEN
  script:
    - coveralls report --build-number $CI_PIPELINE_ID


coveralls:finish-build:
  stage: .post
  variables:
    COVERALLS_WEBHOOK_URL: "https://coveralls.io/webhook"
    COVERALLS_RERUN_BUILD_URL: "https://coveralls.io/rerun_build"
    COVERALLS_GIT_COMMIT: $CI_COMMIT_SHA
  image: curlimages/curl-base
  script:
    - 'curl -k ${COVERALLS_WEBHOOK_URL}?repo_token=${COVERALLS_TOKEN} -d "payload[build_num]=$CI_PIPELINE_ID&payload[status]=done"'
    - 'curl -k "${COVERALLS_RERUN_BUILD_URL}?repo_token=${COVERALLS_TOKEN}&build_num=${CI_PIPELINE_ID}"'
